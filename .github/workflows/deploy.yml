name: Deploy RAG chatbot assistant with VPS

on:
    push:
        branches:
            - production

jobs:
    build:
        name: Build image and push to Docker Hub
        runs-on: ubuntu-latest
        steps:
            - 
                name: Checkout code
                uses: actions/checkout@v3
            -
                name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}
            -
                name: Setup QEMU
                uses: docker/setup-qemu-action@v3

            -
                name: Setup Docker Buildx
                uses: docker/setup-buildx-action@v3

            -
                name: Build and push image
                uses: docker/build-push-action@v3
                with:
                    push: true
                    tags: ${{ secrets.DOCKER_USERNAME }}/rag-chatbot-assistant:latest
    
    deploy:
        name: Deploy to VPS
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: Deploy to VPS
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.VPS_HOST }}
                    username: ${{ secrets.VPS_USERNAME }}
                    key: ${{ secrets.VPS_KEY }}
                    script: |
                        # Create project folder
                        mkdir -p "$HOME/service/public/rag-chatbot-assistant"
                        cd "$HOME/service/public/rag-chatbot-assistant"
                        
                        # Create .env file
                        echo "PORT=${{ secrets.APP_PORT }}" >> .env
                        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
                        echo "SESSION_SECRET_KEY=${{ secrets.APP_SESSION_SECRET_KEY }}" >> .env

                        # Pull and run image
                        docker pull ${{ secrets.DOCKER_USERNAME }}/rag-chatbot-assistant:latest

                        # Remove old container
                        docker stop rag-chatbot-assistant 2>/dev/null || true
                        docker rm rag-chatbot-assistant 2>/dev/null || true

                        # Run new container
                        docker run \
                            -d \
                            --name rag-chatbot-assistant \
                            --env-file .env \
                            -p ${{ secrets.APP_PORT }}:${{ secrets.APP_PORT }} \
                            ${{ secrets.DOCKER_USERNAME }}/rag-chatbot-assistant:latest
                        